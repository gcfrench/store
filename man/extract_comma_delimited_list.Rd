% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format.R
\name{extract_comma_delimited_list}
\alias{extract_comma_delimited_list}
\title{extract_comma_delimited_list}
\usage{
extract_comma_delimited_list(.df, column_name)
}
\arguments{
\item{.df}{data frame, data frame containing the column to extract the delimited list}

\item{column_name}{character, name of column to extract the delimited list}
}
\value{
character, comma delimited list
}
\description{
This function extracts a comma delimited list from a data frame's column
}
\details{
The function is an example of the use of a \href{https://adv-r.hadley.nz/function-factories.html}{function factory},
\href{https://www.tidyverse.org/blog/2020/02/glue-strings-and-tidy-eval/}{tidy evaluation}
and purrr's \href{https://purrr.tidyverse.org/reference/map.html}{map function}.
The function may be called on a \href{https://cran.r-project.org/web/packages/tidyr/vignettes/nest.html}{nested data frame}
to extract the comma delimited list
}
\examples{
suppressPackageStartupMessages({
 library(dplyr)
 library(purrr)
 library(palmerpenguins)
})
library(store)
# select top 5 heaviest penguins from each species on each island
heaviest_penguins <- penguins \%>\%
 select(species, island, body_mass_g) \%>\%
 group_by(species, island) \%>\%
 arrange(desc(body_mass_g)) \%>\%
 slice_head(n = 5) \%>\%
 ungroup()
heaviest_penguins

# extract comma separated list of penguin weights for each species on each island
heaviest_penguins <- heaviest_penguins \%>\%
 group_nest(across(c(species:island)), .key = "penguins") \%>\%
 mutate(weight = map_chr(penguins, extract_comma_delimited_list, column_name = "body_mass_g")) \%>\%
 select(-penguins)
heaviest_penguins
}
